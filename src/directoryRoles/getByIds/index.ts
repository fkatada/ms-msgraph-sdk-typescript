/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDirectoryObjectFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeDirectoryObject, type BaseCollectionPaginationCountResponse, type DirectoryObject } from '../../models/';
import { createODataErrorFromDiscriminatorValue, deserializeIntoODataError, serializeODataError, type ODataError } from '../../models/oDataErrors/';
import { BaseRequestBuilder, HttpMethod, RequestInformation, type AdditionalDataHolder, type Parsable, type ParsableFactory, type ParseNode, type RequestAdapter, type RequestConfiguration, type RequestOption, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createGetByIdsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoGetByIdsPostRequestBody;
}
export function createGetByIdsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoGetByIdsPostResponse;
}
export function deserializeIntoGetByIdsPostRequestBody(getByIdsPostRequestBody: GetByIdsPostRequestBody | undefined = {} as GetByIdsPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "ids": n => { getByIdsPostRequestBody.ids = n.getCollectionOfPrimitiveValues<string>(); },
        "types": n => { getByIdsPostRequestBody.types = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export function deserializeIntoGetByIdsPostResponse(getByIdsPostResponse: GetByIdsPostResponse | undefined = {} as GetByIdsPostResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getByIdsPostResponse),
        "value": n => { getByIdsPostResponse.value = n.getCollectionOfObjectValues<DirectoryObject>(createDirectoryObjectFromDiscriminatorValue); },
    }
}
export interface GetByIdsPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The ids property
     */
    ids?: string[];
    /**
     * The types property
     */
    types?: string[];
}
export interface GetByIdsPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DirectoryObject[];
}
export function serializeGetByIdsPostRequestBody(writer: SerializationWriter, getByIdsPostRequestBody: GetByIdsPostRequestBody | undefined = {} as GetByIdsPostRequestBody) : void {
    writer.writeCollectionOfPrimitiveValues<string>("ids", getByIdsPostRequestBody.ids);
    writer.writeCollectionOfPrimitiveValues<string>("types", getByIdsPostRequestBody.types);
    writer.writeAdditionalData(getByIdsPostRequestBody.additionalData);
}
export function serializeGetByIdsPostResponse(writer: SerializationWriter, getByIdsPostResponse: GetByIdsPostResponse | undefined = {} as GetByIdsPostResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, getByIdsPostResponse)
    writer.writeCollectionOfObjectValues<DirectoryObject>("value", getByIdsPostResponse.value, serializeDirectoryObject);
}
/**
 * Provides operations to call the getByIds method.
 */
export class GetByIdsRequestBuilder extends BaseRequestBuilder<GetByIdsRequestBuilder> {
    /**
     * Instantiates a new GetByIdsRequestBuilder and sets the default values.
     * @param pathParameters The raw url or the Url template parameters for the request.
     * @param requestAdapter The request adapter to use to execute the requests.
     */
    public constructor(pathParameters: Record<string, unknown> | string | undefined, requestAdapter: RequestAdapter) {
        super(pathParameters, requestAdapter, "{+baseurl}/directoryRoles/getByIds", (x, y) => new GetByIdsRequestBuilder(x, y));
    }
    /**
     * Return the directory objects specified in a list of IDs. Only a subset of user properties are returned by default in v1.0. Some common uses for this function are to:
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GetByIdsPostResponse
     * @see {@link https://learn.microsoft.com/graph/api/directoryobject-getbyids?view=graph-rest-1.0|Find more info here}
     */
    public post(body: GetByIdsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GetByIdsPostResponse | undefined> {
        const requestInfo = this.toPostRequestInformation(
            body, requestConfiguration
        );
        const errorMapping = {
            "4XX": createODataErrorFromDiscriminatorValue,
            "5XX": createODataErrorFromDiscriminatorValue,
        } as Record<string, ParsableFactory<Parsable>>;
        return this.requestAdapter.sendAsync<GetByIdsPostResponse>(requestInfo, createGetByIdsPostResponseFromDiscriminatorValue, errorMapping);
    }
    /**
     * Return the directory objects specified in a list of IDs. Only a subset of user properties are returned by default in v1.0. Some common uses for this function are to:
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
    public toPostRequestInformation(body: GetByIdsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation {
        if(!body) throw new Error("body cannot be undefined");
        const requestInfo = new RequestInformation(HttpMethod.POST, this.urlTemplate, this.pathParameters);
        requestInfo.configure(requestConfiguration);
        requestInfo.headers.tryAdd("Accept", "application/json");
        requestInfo.setContentFromParsable(this.requestAdapter, "application/json", body, serializeGetByIdsPostRequestBody);
        return requestInfo;
    }
}
/* tslint:enable */
/* eslint-enable */
