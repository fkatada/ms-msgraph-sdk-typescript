// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, deserializeIntoODataError, serializeODataError, type ODataError } from '../../../../../../../models/oDataErrors/';
import { BaseRequestBuilder, HttpMethod, RequestInformation, type AdditionalDataHolder, type Parsable, type ParsableFactory, type ParseNode, type RequestAdapter, type RequestConfiguration, type RequestOption, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BatchRecordDecisionsPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The decision property
     */
    decision?: string;
    /**
     * The justification property
     */
    justification?: string;
    /**
     * The principalId property
     */
    principalId?: string;
    /**
     * The resourceId property
     */
    resourceId?: string;
}
export function createBatchRecordDecisionsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoBatchRecordDecisionsPostRequestBody;
}
export function deserializeIntoBatchRecordDecisionsPostRequestBody(batchRecordDecisionsPostRequestBody: BatchRecordDecisionsPostRequestBody | undefined = {} as BatchRecordDecisionsPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "decision": n => { batchRecordDecisionsPostRequestBody.decision = n.getStringValue(); },
        "justification": n => { batchRecordDecisionsPostRequestBody.justification = n.getStringValue(); },
        "principalId": n => { batchRecordDecisionsPostRequestBody.principalId = n.getStringValue(); },
        "resourceId": n => { batchRecordDecisionsPostRequestBody.resourceId = n.getStringValue(); },
    }
}
export function serializeBatchRecordDecisionsPostRequestBody(writer: SerializationWriter, batchRecordDecisionsPostRequestBody: BatchRecordDecisionsPostRequestBody | undefined = {} as BatchRecordDecisionsPostRequestBody) : void {
    writer.writeStringValue("decision", batchRecordDecisionsPostRequestBody.decision);
    writer.writeStringValue("justification", batchRecordDecisionsPostRequestBody.justification);
    writer.writeStringValue("principalId", batchRecordDecisionsPostRequestBody.principalId);
    writer.writeStringValue("resourceId", batchRecordDecisionsPostRequestBody.resourceId);
    writer.writeAdditionalData(batchRecordDecisionsPostRequestBody.additionalData);
}
/**
 * Provides operations to call the batchRecordDecisions method.
 */
export class BatchRecordDecisionsRequestBuilder extends BaseRequestBuilder<BatchRecordDecisionsRequestBuilder> {
    /**
     * Instantiates a new BatchRecordDecisionsRequestBuilder and sets the default values.
     * @param pathParameters The raw url or the Url template parameters for the request.
     * @param requestAdapter The request adapter to use to execute the requests.
     */
    public constructor(pathParameters: Record<string, unknown> | string | undefined, requestAdapter: RequestAdapter) {
        super(pathParameters, requestAdapter, "{+baseurl}/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition%2Did}/instances/{accessReviewInstance%2Did}/batchRecordDecisions", (x, y) => new BatchRecordDecisionsRequestBuilder(x, y));
    }
    /**
     * Enables reviewers to review all accessReviewInstanceDecisionItem objects in batches by using principalId, resourceId, or neither.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/accessreviewinstance-batchrecorddecisions?view=graph-rest-1.0|Find more info here}
     */
    public post(body: BatchRecordDecisionsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void> {
        const requestInfo = this.toPostRequestInformation(
            body, requestConfiguration
        );
        const errorMapping = {
            "4XX": createODataErrorFromDiscriminatorValue,
            "5XX": createODataErrorFromDiscriminatorValue,
        } as Record<string, ParsableFactory<Parsable>>;
        return this.requestAdapter.sendNoResponseContentAsync(requestInfo, errorMapping);
    }
    /**
     * Enables reviewers to review all accessReviewInstanceDecisionItem objects in batches by using principalId, resourceId, or neither.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
    public toPostRequestInformation(body: BatchRecordDecisionsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation {
        if(!body) throw new Error("body cannot be undefined");
        const requestInfo = new RequestInformation(HttpMethod.POST, this.urlTemplate, this.pathParameters);
        requestInfo.configure(requestConfiguration);
        requestInfo.headers.tryAdd("Accept", "application/json");
        requestInfo.setContentFromParsable(this.requestAdapter, "application/json", body, serializeBatchRecordDecisionsPostRequestBody);
        return requestInfo;
    }
}
// tslint:enable
// eslint-enable
