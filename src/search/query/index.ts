/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSearchRequestFromDiscriminatorValue, createSearchResponseFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeSearchRequest, serializeSearchResponse, type BaseCollectionPaginationCountResponse, type SearchRequest, type SearchResponse } from '../../models/';
import { createODataErrorFromDiscriminatorValue, deserializeIntoODataError, serializeODataError, type ODataError } from '../../models/oDataErrors/';
import { BaseRequestBuilder, HttpMethod, RequestInformation, type AdditionalDataHolder, type Parsable, type ParsableFactory, type ParseNode, type RequestAdapter, type RequestConfiguration, type RequestOption, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createQueryPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoQueryPostRequestBody;
}
export function createQueryPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoQueryPostResponse;
}
export function deserializeIntoQueryPostRequestBody(queryPostRequestBody: QueryPostRequestBody | undefined = {} as QueryPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "requests": n => { queryPostRequestBody.requests = n.getCollectionOfObjectValues<SearchRequest>(createSearchRequestFromDiscriminatorValue); },
    }
}
export function deserializeIntoQueryPostResponse(queryPostResponse: QueryPostResponse | undefined = {} as QueryPostResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(queryPostResponse),
        "value": n => { queryPostResponse.value = n.getCollectionOfObjectValues<SearchResponse>(createSearchResponseFromDiscriminatorValue); },
    }
}
export interface QueryPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The requests property
     */
    requests?: SearchRequest[];
}
export interface QueryPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SearchResponse[];
}
export function serializeQueryPostRequestBody(writer: SerializationWriter, queryPostRequestBody: QueryPostRequestBody | undefined = {} as QueryPostRequestBody) : void {
    writer.writeCollectionOfObjectValues<SearchRequest>("requests", queryPostRequestBody.requests, serializeSearchRequest);
    writer.writeAdditionalData(queryPostRequestBody.additionalData);
}
export function serializeQueryPostResponse(writer: SerializationWriter, queryPostResponse: QueryPostResponse | undefined = {} as QueryPostResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, queryPostResponse)
    writer.writeCollectionOfObjectValues<SearchResponse>("value", queryPostResponse.value, serializeSearchResponse);
}
/**
 * Provides operations to call the query method.
 */
export class QueryRequestBuilder extends BaseRequestBuilder<QueryRequestBuilder> {
    /**
     * Instantiates a new QueryRequestBuilder and sets the default values.
     * @param pathParameters The raw url or the Url template parameters for the request.
     * @param requestAdapter The request adapter to use to execute the requests.
     */
    public constructor(pathParameters: Record<string, unknown> | string | undefined, requestAdapter: RequestAdapter) {
        super(pathParameters, requestAdapter, "{+baseurl}/search/query", (x, y) => new QueryRequestBuilder(x, y));
    }
    /**
     * Runs the query specified in the request body. Search results are provided in the response.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of QueryPostResponse
     * @see {@link https://learn.microsoft.com/graph/api/search-query?view=graph-rest-1.0|Find more info here}
     */
    public post(body: QueryPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<QueryPostResponse | undefined> {
        const requestInfo = this.toPostRequestInformation(
            body, requestConfiguration
        );
        const errorMapping = {
            "4XX": createODataErrorFromDiscriminatorValue,
            "5XX": createODataErrorFromDiscriminatorValue,
        } as Record<string, ParsableFactory<Parsable>>;
        return this.requestAdapter.sendAsync<QueryPostResponse>(requestInfo, createQueryPostResponseFromDiscriminatorValue, errorMapping);
    }
    /**
     * Runs the query specified in the request body. Search results are provided in the response.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
    public toPostRequestInformation(body: QueryPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation {
        if(!body) throw new Error("body cannot be undefined");
        const requestInfo = new RequestInformation(HttpMethod.POST, this.urlTemplate, this.pathParameters);
        requestInfo.configure(requestConfiguration);
        requestInfo.headers.tryAdd("Accept", "application/json");
        requestInfo.setContentFromParsable(this.requestAdapter, "application/json", body, serializeQueryPostRequestBody);
        return requestInfo;
    }
}
/* tslint:enable */
/* eslint-enable */
