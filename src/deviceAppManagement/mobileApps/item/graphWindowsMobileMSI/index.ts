/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createWindowsMobileMSIFromDiscriminatorValue, type WindowsMobileMSI } from '../../../../models/';
import { createODataErrorFromDiscriminatorValue, deserializeIntoODataError, serializeODataError, type ODataError } from '../../../../models/oDataErrors/';
import { AssignmentsRequestBuilder } from './assignments/';
import { CategoriesRequestBuilder } from './categories/';
import { ContentVersionsRequestBuilder } from './contentVersions/';
import { BaseRequestBuilder, HttpMethod, RequestInformation, type Parsable, type ParsableFactory, type RequestAdapter, type RequestConfiguration, type RequestOption } from '@microsoft/kiota-abstractions';

export interface GraphWindowsMobileMSIRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Casts the previous resource to windowsMobileMSI.
 */
export class GraphWindowsMobileMSIRequestBuilder extends BaseRequestBuilder<GraphWindowsMobileMSIRequestBuilder> {
    /**
     * Provides operations to manage the assignments property of the microsoft.graph.mobileApp entity.
     */
    public get assignments(): AssignmentsRequestBuilder {
        return new AssignmentsRequestBuilder(this.pathParameters, this.requestAdapter);
    }
    /**
     * Provides operations to manage the categories property of the microsoft.graph.mobileApp entity.
     */
    public get categories(): CategoriesRequestBuilder {
        return new CategoriesRequestBuilder(this.pathParameters, this.requestAdapter);
    }
    /**
     * Provides operations to manage the contentVersions property of the microsoft.graph.mobileLobApp entity.
     */
    public get contentVersions(): ContentVersionsRequestBuilder {
        return new ContentVersionsRequestBuilder(this.pathParameters, this.requestAdapter);
    }
    /**
     * Instantiates a new GraphWindowsMobileMSIRequestBuilder and sets the default values.
     * @param pathParameters The raw url or the Url template parameters for the request.
     * @param requestAdapter The request adapter to use to execute the requests.
     */
    public constructor(pathParameters: Record<string, unknown> | string | undefined, requestAdapter: RequestAdapter) {
        super(pathParameters, requestAdapter, "{+baseurl}/deviceAppManagement/mobileApps/{mobileApp%2Did}/graph.windowsMobileMSI{?%24select,%24expand}", (x, y) => new GraphWindowsMobileMSIRequestBuilder(x, y));
    }
    /**
     * Get the item of type microsoft.graph.mobileApp as microsoft.graph.windowsMobileMSI
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of WindowsMobileMSI
     */
    public get(requestConfiguration?: RequestConfiguration<GraphWindowsMobileMSIRequestBuilderGetQueryParameters> | undefined) : Promise<WindowsMobileMSI | undefined> {
        const requestInfo = this.toGetRequestInformation(
            requestConfiguration
        );
        const errorMapping = {
            "4XX": createODataErrorFromDiscriminatorValue,
            "5XX": createODataErrorFromDiscriminatorValue,
        } as Record<string, ParsableFactory<Parsable>>;
        return this.requestAdapter.sendAsync<WindowsMobileMSI>(requestInfo, createWindowsMobileMSIFromDiscriminatorValue, errorMapping);
    }
    /**
     * Get the item of type microsoft.graph.mobileApp as microsoft.graph.windowsMobileMSI
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
    public toGetRequestInformation(requestConfiguration?: RequestConfiguration<GraphWindowsMobileMSIRequestBuilderGetQueryParameters> | undefined) : RequestInformation {
        const requestInfo = new RequestInformation(HttpMethod.GET, this.urlTemplate, this.pathParameters);
        requestInfo.configure(requestConfiguration, graphWindowsMobileMSIRequestBuilderGetQueryParametersMapper);
        requestInfo.headers.tryAdd("Accept", "application/json");
        return requestInfo;
    }
}
const graphWindowsMobileMSIRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/* tslint:enable */
/* eslint-enable */
