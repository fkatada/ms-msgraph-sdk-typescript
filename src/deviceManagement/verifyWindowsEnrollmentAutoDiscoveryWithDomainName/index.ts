// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, deserializeIntoODataError, serializeODataError, type ODataError } from '../../models/oDataErrors/';
import { BaseRequestBuilder, HttpMethod, RequestInformation, type AdditionalDataHolder, type Parsable, type ParsableFactory, type ParseNode, type RequestAdapter, type RequestConfiguration, type RequestOption, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createVerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoVerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse;
}
export function deserializeIntoVerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse(verifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse: VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse | undefined = {} as VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { verifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse.value = n.getBooleanValue(); },
    }
}
export function serializeVerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse(writer: SerializationWriter, verifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse: VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse | undefined = {} as VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse) : void {
    writer.writeBooleanValue("value", verifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse.value);
    writer.writeAdditionalData(verifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse.additionalData);
}
export interface VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: boolean;
}
/**
 * Provides operations to call the verifyWindowsEnrollmentAutoDiscovery method.
 */
export class VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder extends BaseRequestBuilder<VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder> {
    /**
     * Instantiates a new VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder and sets the default values.
     * @param domainName Usage: domainName='{domainName}'
     * @param pathParameters The raw url or the Url template parameters for the request.
     * @param requestAdapter The request adapter to use to execute the requests.
     */
    public constructor(pathParameters: Record<string, unknown> | string | undefined, requestAdapter: RequestAdapter, domainName?: string | undefined) {
        super(pathParameters, requestAdapter, "{+baseurl}/deviceManagement/verifyWindowsEnrollmentAutoDiscovery(domainName='{domainName}')", (x, y) => new VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder(x, y));
        this.pathParameters["domainName"] = domainName
    }
    /**
     * Invoke function verifyWindowsEnrollmentAutoDiscovery
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse
     */
    public get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse | undefined> {
        const requestInfo = this.toGetRequestInformation(
            requestConfiguration
        );
        const errorMapping = {
            "4XX": createODataErrorFromDiscriminatorValue,
            "5XX": createODataErrorFromDiscriminatorValue,
        } as Record<string, ParsableFactory<Parsable>>;
        return this.requestAdapter.sendAsync<VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponse>(requestInfo, createVerifyWindowsEnrollmentAutoDiscoveryWithDomainNameGetResponseFromDiscriminatorValue, errorMapping);
    }
    /**
     * Invoke function verifyWindowsEnrollmentAutoDiscovery
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
    public toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation {
        const requestInfo = new RequestInformation(HttpMethod.GET, this.urlTemplate, this.pathParameters);
        requestInfo.configure(requestConfiguration);
        requestInfo.headers.tryAdd("Accept", "application/json");
        return requestInfo;
    }
}
// tslint:enable
// eslint-enable
